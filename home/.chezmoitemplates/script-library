# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   @author         :   Chris Burnham
#   @description    :
#   @references     :   https://alinex.gitlab.io/bash-lib/libs/log/
#                       https://github.com/martinburger/bash-common-helpers/blob/master/bash-common-helpers.sh
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ╔══════════╦═══════╦═══════════════════════════════════════════════════════════════════════╗
# ║    id    ║ level ║ usage                                                                 ║
# ╠══════════╬═══════╬═══════════════════════════════════════════════════════════════════════╣
# ║   debug  ║   5   ║ * Detailed information to help diagnose, troubleshoot or test.        ║
# ╠══════════╬═══════╬═══════════════════════════════════════════════════════════════════════╣
# ║   info   ║   4   ║ * Standard message for normal behavior such as indicating status or   ║
# ║          ║       ║ that something has occurred.                                          ║
# ╠══════════╬═══════╬═══════════════════════════════════════════════════════════════════════╣
# ║  warning ║   3   ║ * An unexpected event within the application.                         ║
# ╠══════════╬═══════╬═══════════════════════════════════════════════════════════════════════╣
# ║  error   ║   2   ║ * A failure of important functionality.                               ║
# ╠══════════╬═══════╬═══════════════════════════════════════════════════════════════════════╣
# ║ critical ║   1   ║ * A critical fault has occurred which causes an abort.                ║
# ╠══════════╬═══════╬═══════════════════════════════════════════════════════════════════════╣
# ║    off   ║   0   ║ *No logging will be performed                                         ║
# ╚══════════╩═══════╩═══════════════════════════════════════════════════════════════════════╝

# --------------------------------------------------------------------------------------------------
#   @description    :   Script Variables
# --------------------------------------------------------------------------------------------------
LOG_LEVEL="${LOG_LEVEL:-4}"
NO_COLOR="${NO_COLOR:-}"    # true = disable color. otherwise autodetected
LOG_CATEGORY=false
LOG_CATEGORY_ICON="🌐"
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function console_log() {
  local log_level="${1}"
  shift

  # shellcheck disable=SC2034
  local color_debug="\\x1b[34m"
  # shellcheck disable=SC2034
  local color_info="\\x1b[32m"
  # shellcheck disable=SC2034
  local color_warning="\\x1b[33m"
  # shellcheck disable=SC2034
  local color_error="\\x1b[31m"
  # shellcheck disable=SC2034
  local color_critical="\\x1b[1;4;37;41m"

  local colorvar="color_${log_level}"
  local color="${!colorvar:-${color_error}}"
  local color_reset="\\x1b[0m"

  if [[ "${NO_COLOR:-}" = "true" ]] || { [[ "${TERM:-}" != "xterm"* ]] && [[ "${TERM:-}" != "screen"* ]]; } || [[ ! -t 2 ]]; then
    if [[ "${NO_COLOR:-}" != "false" ]]; then
      # Don't use colors on pipes or non-recognized terminals
      color=""; color_reset=""
    fi
  fi

  local log_level_block="${color}$(printf "[%9s]" "${log_level}")${color_reset}"
  local log_line=""
  # all remaining arguments are to be printed
  while IFS=$'\n' read -r log_line; do
    if test "$LOG_CATEGORY" = false; then
      echo -e "$(date -u +"%Y-%m-%d %H:%M:%S UTC") ${color}${log_level_block}${color_reset} ${log_line}" 1>&2
    else
      local log_category="$(printf "[${LOG_CATEGORY_ICON}%17s]" "${LOG_CATEGORY:0:16}")"
      echo -e "$(date -u +"%Y-%m-%d %H:%M:%S UTC") ${log_level_block} ${log_category} ${log_line}" 1>&2
    fi
  done <<< "${@:-}"
}
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :   LOG_LEVEL = 5
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function debug()    { [[ "${LOG_LEVEL:-0}" -ge 5 ]] && console_log debug "${@}"; true; }
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :   LOG_LEVEL = 4
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function info()     { [[ "${LOG_LEVEL:-0}" -ge 4 ]] && console_log info "${@}"; true; }
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :   LOG_LEVEL = 3
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function warning()  { [[ "${LOG_LEVEL:-0}" -ge 3 ]] && console_log warning "${@}"; true; }
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :   LOG_LEVEL = 2
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function error()    { [[ "${LOG_LEVEL:-0}" -ge 2 ]] && console_log error "${@}"; true; }
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :   LOG_LEVEL = 1
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function critical() { [[ "${LOG_LEVEL:-0}" -ge 1 ]] && console_log critical "${@}"; exit 1; }
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function check_binary() {
  if [[ $# -lt 1 ]]; then
    fatal "Missing required argument for function check_binary()"
  fi

  if ! command -v "$1" > /dev/null 2>&1; then

    if [[ -n ${2-} ]]; then
      fatal "Missing dependency: Couldn't locate $1."
    else
      # debug "Missing dependency: $1"
      return 1
    fi

  fi

  # debug "Dependency found: $1"
  return 0
}
# ==================================================================================================

# --------------------------------------------------------------------------------------------------
#   @description    :
#   @globals        :
#   @arguments      :
#   @outputs        :
#   @returns        :
# --------------------------------------------------------------------------------------------------
function check_macos_app() {
  if [[ $# -lt 1 ]]; then
    fatal "Missing required argument for function check_macos_app()"
  fi

  if ! echo $(mdfind "kMDItemKind == 'Application'") | grep -q "$1"; then
    # debug "Missing dependency: $1"
    return 1
  fi

  # debug "Dependency found: $1"
  return 0
}
# ==================================================================================================
